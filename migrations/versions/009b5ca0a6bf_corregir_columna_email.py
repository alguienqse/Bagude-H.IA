"""Corregir columna email

Revision ID: 009b5ca0a6bf
Revises: 
Create Date: 2025-07-25 12:21:03.631152
"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect


# revision identifiers, used by Alembic.
revision = '009b5ca0a6bf'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Verificar si la tabla _alembic_tmp_user existe, si no, no la eliminamos
    if inspect(op.get_bind()).has_table('_alembic_tmp_user'):
        op.drop_table('_alembic_tmp_user')
    
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.String(length=120), nullable=True))
        # Agregar un nombre para el constraint único correctamente
        batch_op.create_unique_constraint('uq_user_email', ['email'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        # Eliminar el constraint único
        batch_op.drop_constraint('uq_user_email', type_='unique')
        batch_op.drop_column('email')

    # Volver a crear la tabla temporal (_alembic_tmp_user) si se revierte la migración
    op.create_table('_alembic_tmp_user',
        sa.Column('id', sa.INTEGER(), nullable=False),
        sa.Column('session_id', sa.VARCHAR(length=100), nullable=False),
        sa.Column('is_premium', sa.BOOLEAN(), nullable=True),
        sa.Column('questions_used', sa.INTEGER(), nullable=True),
        sa.Column('images_used', sa.INTEGER(), nullable=True),
        sa.Column('email', sa.VARCHAR(length=120), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email', name=op.f('uq_user_email')),
        sa.UniqueConstraint('session_id')
    )
    # ### end Alembic commands ###